parameters:
  - name: application
    type: string

stages:
  - stage: Setup
    jobs:
      - job: Initialize
        steps:
          - checkout: self
            displayName: Checkout
            fetchDepth: '0'

          - script: |
              if [ "$(Build.SourceBranchName)" == "<MAIN BRANCH>" ]; then
                echo "##vso[task.setvariable variable=envVar;isOutput=true]prod"
                echo "##vso[task.setvariable variable=ecsCluster;isOutput=true]<ECS CLUSTER NAME>"
              elif [ "$(Build.SourceBranchName)" == "<QA BRANCH>" ]; then
                echo "##vso[task.setvariable variable=envVar;isOutput=true]qa"
                echo "##vso[task.setvariable variable=ecsCluster;isOutput=true]<ECS CLUSTER NAME>"
              elif [ "$(Build.SourceBranchName)" == "<DEV BRANCH>" ]; then
                echo "##vso[task.setvariable variable=envVar;isOutput=true]dev"
                echo "##vso[task.setvariable variable=ecsCluster;isOutput=true]<ECS CLUSTER NAME>"
              else
                echo "##vso[task.setvariable variable=envVar;isOutput=true]unknown"
                echo "##vso[task.setvariable variable=ecsCluster;isOutput=true]unknown"
              fi
            displayName: "Setting environment"
            name: BranchName

          - task: gitversion/setup@1.1.1
            displayName: Install GitVersion
            inputs:
              versionSpec: '5.x'

          - task: gitversion/execute@1.1.1
            displayName: Determine version
            name: SetVersion

          - script: |
              echo "##vso[task.setvariable variable=newVersion;isOutput=true]$(SetVersion.MajorMinorPatch)"
            name: Version
            displayName: "Setting version"
